AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Luthor Gateway

Parameters:
  StageName:
    Type: String
    Default: dev
    AllowedValues:
    - dev
    Description: The Lambda Function and API Gateway Stage

Resources:
  LuthorLambdaFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      AutoPublishAlias: current
      FunctionName: !Sub luthor-gateway-${StageName}
      Runtime: nodejs8.10
      Handler: index.handler
      InlineCode: |
        "use strict";

        const AWS = require("aws-sdk");
        const lambda = new AWS.Lambda();

        exports.handler = async (event, context) => {
          const req = JSON.parse(event.body)

          const params = {
            FunctionName: process.env.TRIGGER_LAMBDA,
            InvocationType: "RequestResponse",
            Payload: JSON.stringify(req)
          };

          console.log('invoking lex');
          console.log(params);

          const response = await lambda.invoke(params).promise();

          console.log('received lex response');
          console.log(response)

          const payload = JSON.parse(response.Payload);
          const statusCode = payload.intentName ? 200 : 422;
          const message = payload.intentName ? payload.message : null;
          const body = JSON.stringify({ message });

          return { statusCode, body };
        };

      Timeout: 300
      MemorySize: 1792
      Policies:
        - VPCAccessPolicy: {}
        - Statement:
          -
            Effect: "Allow"
            Action:
              - "lambda:InvokeFunction"
            Resource: "*"
      Events:
        PostRequest:
          Type: Api
          Properties:
            Path: /hooks/salesforce/sms
            Method: POST
            RestApiId: !Ref LuthorGateway
        OptionsRequest:
          Type: Api
          Properties:
            Path: /hooks/salesforce/sms
            Method: OPTIONS
            RestApiId: !Ref LuthorGateway
      Environment:
        Variables:
          TRIGGER_LAMBDA: arn:aws:lambda:us-west-2:477873552632:function:TriggerLuthor

  LuthorGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub 'LuthorAPI-${StageName}'
      StageName: Prod
      DefinitionBody:
        swagger: "2.0"
        info:
          version: "1.0"
          title: !Sub luthor-api-${AWS::Region}-${StageName}
        basePath: "/"
        schemes:
        - "https"
        paths:
          /hooks/salesforce/sms:
            post:
              responses: {}
              x-amazon-apigateway-integration:
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LuthorLambdaFunction.Arn}:current/invocations
                passthroughBehavior: "when_no_match"
                httpMethod: "POST"
                type: "aws_proxy"
            options:
              responses: {}
              x-amazon-apigateway-integration:
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LuthorLambdaFunction.Arn}:current/invocations
                passthroughBehavior: "when_no_match"
                httpMethod: "OPTIONS"
                type: "aws_proxy"
      MethodSettings:
        - HttpMethod: POST
          DataTraceEnabled: true
          ResourcePath: /~hooks/salesforce/sms

Outputs:
  LuthorGatewayAPIURL:
    Value: !Sub "https://${LuthorGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/hooks/salesforce/sms"
    Export:
      Name: !Sub ${StageName}LuthorGatewayAPIURL
